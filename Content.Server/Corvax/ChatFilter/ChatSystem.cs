using System.Linq;
using System.Text.RegularExpressions;

namespace Content.Server.Chat.Systems;

public sealed partial class ChatSystem
{
    private static readonly Dictionary<string, string> SlangReplace = new()
    {
        // Game
        { "хос", "гсб" },
        { "хоса", "гсб" },
        { "смо", "гв" },
        { "се", "си" },
        { "хоп", "гп" },
        { "хопа", "гп" },
        { "рд", "нд" },
        { "вард", "Смотритель" },
        { "варден", "Смотритель" },
        { "вардена", "Смотрителя" },
        { "геник", "генератор" },
        { "кк", "красный код" },
        { "ск", "синий код" },
        { "зк", "зелёный код" },
        { "пда", "кпк" },
        { "дэк", "детектив" },
        { "дэку", "Детективу" },
        { "дэка", "Детектива" },
        { "дек", "Детектив" },
        { "деку", "Детективу" },
        { "дека", "Детектива" },
        { "мш", "имплант защиты разума" },
        { "трейтор", "предатель" },
        { "инж", "инженер" },
        { "инжи", "инженеры" },
        { "инжы", "инженеры" },
        { "инжу", "инженеру" },
        { "инжам", "инженерам" },
        { "инжинер", "инженер" },
        { "яо", "ядерные оперативники" }, // cyrillic о
        { "яой", "ядерные оперативники" }, // cyrillic о
        { "яo", "ядерные оперативники" }, // latin o
        { "яoй", "ядерные оперативники" }, // latin o
        { "нюк", "ядерный оперативник" },
        { "нюкеры", "ядерные оперативники" },
        { "нюкер", "ядерный оперативник" },
        { "нюкеровец", "ядерный оперативник" },
        { "нюкеров", "ядерных оперативников" },
        { "аирлок", "шлюз" },
        { "аирлоки", "шлюзы" },
        { "айрлок", "шлюз" },
        { "айрлоки", "шлюзы" },
        { "визард", "волшебник" },
        { "дизарм", "толчок" },
        { "синга", "сингулярность" },
        { "сингу", "сингулярность" },
        { "синги", "сингулярности" },
        { "сингой", "сингулярностью" },
        { "разгерм", "разгерметизация" },
        { "разгерма", "разгерметизация" },
        { "разгерму", "разгерметизацию" },
        { "разгермы", "разгерметизации" },
        { "разгермой", "разгерметизацией" },
        { "бикардин", "бикаридин" },
        { "бика", "бикаридин" },
        { "бику", "бикаридин" },
        { "декса", "дексалин" },
        { "дексу", "дексалин" },
        // IC
        { "хз", "не знаю" },
        { "синд", "синдикат" },
        { "пон", "понятно" },
        { "непон", "не понятно" },
        { "нипон", "не понятно" },
        { "кста", "кстати" },
        { "кст", "кстати" },
        { "плз", "пожалуйста" },
        { "пж", "пожалуйста" },
        { "спс", "спасибо" },
        { "сяб", "спасибо" },
        { "прив", "привет" },
        { "ок", "окей" },
        { "чел", "мужик" },
        { "лан", "ладно" },
        { "збс", "заебись" },
        { "мб", "может быть" },
        { "оч", "очень" },
        { "омг", "боже мой" },
        { "нзч", "не за что" },
        { "пок", "пока" },
        { "бб", "пока" },
        { "пох", "плевать" },
        { "ясн", "ясно" },
        { "всм", "всмысле" },
        { "чзх", "что за херня?" },
        { "изи", "легко" },
        { "гг", "хорошо сработано" },
        { "пруф", "доказательство" },
        { "пруфани", "докажи" },
        { "пруфанул", "доказал" },
        { "брух", "мда..." },
        ///{ "имба", "нечестно" },
        { "разлокать", "разблокировать" },
        { "юзать", "использовать" },
        { "юзай", "используй" },
        { "юзнул", "использовал" },
        { "хилл", "лечение" },
        { "подхиль", "полечи" },
        { "хильни", "полечи" },
        { "хелп", "помоги" },
        { "хелпани", "помоги" },
        { "хелпанул", "помог" },
        { "рофл", "прикол" },
        { "рофлишь", "шутишь" },
        { "крч", "короче говоря" },
        { "шатл", "шаттл" },
        // OOC
        { "афк", "ссд" },
        { "админ", "я долбоёб кста," },
        { "админов", "я долбоёб кста," },
        { "админы", "я долбоёб кста," },
        { "забанят", "я долбоёб кста," },
        { "бан", "я долбоёб кста," },
        { "пермач", "я долбоёб кста," },
        { "запермили", "я долбоёб кста," },
        { "запермят", "накажут" },
        { "нонрп", "я долбоёб кста," },
        { "нрп", "я долбоёб кста," },
        { "лрп", "я долбоёб кста," },
        { "корвакс", "хуй" },
        { "вайт дрим", "хуй" },
        { "сс220", "" },
        { "Шусс", "Древний стример" },
        { "импостер", "вражеский агент" },
        { "фурри", "ксенос" },
        { "амогус", "у меня микропенис" },
        { "рдм", "плохо" },
        { "дм", "плохо" },
        { "гриф", "плохо" },
        { "фрикил", "плохо" },
        { "фрикилл", "плохо" },
        { "лкм", "левая рука" },
        { "пкм", "правая рука" },
		// Lost-Paradise-Edit-Start
		    { "сщ", "Синий Щит" },
		    { "осщ", "Офицер Синий Щит" },
		    { "общ", "Офицер Синий Щит" },
		    { "блющилд", "Офицер Синий Щит" },
        { "урог", "Адольф Гитлер" },
        { "Миун", "Нытик попущенный" },
        { "крит", "критическое состояние"},
        { "в крите", "в критическом состоянии"},
        { "в крит", "в критическое состояние"},
        { "набегатор", "пидорас"},
        { "набегер", "пидорас"},
        { "пидарайс", "я пидорас"},
        { "педарайс", "я пидорас"},
        { "ЕРП", "похабщина"},
        { "ERP", "похабщина"},
        { "сожгу фурри", "сожгу свой дом"},
        { "расстреляю фурри", "расстреляю своих родных"},
        { "научрук", "научдик"},
        { "научрука", "научдика"},
        { "научный руководитель", "научный директор"},
        { "научному руководителю", "научному директору"},
        { "научного руководителя", "научного директора"},    
        { "нр", "нд"},
        { "нра", "нда"},
        { "нру", "нду"},                
		// Lost-Paradise-Edit-End
    };

    private string ReplaceWords(string message)
    {
        if (string.IsNullOrEmpty(message))
            return message;

        return Regex.Replace(message, "\\b(\\w+)\\b", match =>
        {
            bool isUpperCase = match.Value.All(Char.IsUpper);

            if (SlangReplace.TryGetValue(match.Value.ToLower(), out var replacement))
                return isUpperCase ? replacement.ToUpper() : replacement;
            return match.Value;
        });
    }
}
